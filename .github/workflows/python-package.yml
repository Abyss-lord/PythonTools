# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package Check

on:
  push:
    branches: [ "feature-dev" ]
  pull_request:
    branches: [ "feature-dev", "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
      # 在非windows平台上安装依赖
    - name: Install Dependencies On Non Windows Platforms
      if: matrix.os != 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      # 在windows平台上安装依赖
    - name: Install Dependencies On Windows Platforms
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        if (Test-Path -Path '.\requirements.txt' -PathType Leaf) {pip install -r requirements.txt}
      # 使用 ruff 进行检查和格式化
    - name: Lint With Ruff
      run: |
        ruff check --fix
        ruff format
      # 生成测试报告xml
    - name: Generate Coverage Client Report
      run: |
        coverage erase
        coverage run -m pytest "$GITHUB_WORKSPACE/tests"
        coverage report --omit="$GITHUB_WORKSPACE/tests/*"
        coverage xml -i --omit="$GITHUB_WORKSPACE/tests/*"
      env:
        COVERAGE_RUN: True
      # 上传测试报告到Codecov
    - name: Upload report to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
